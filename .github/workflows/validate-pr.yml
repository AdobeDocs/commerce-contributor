---
name: Validate pull request
on:
  pull_request:

jobs:
  toc:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run TOC validation
        run: npm run test:config

  markdown-lint:
    needs: toc
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Markdown lint
        run: npm run lint:md

  remark-lint:
    needs: markdown-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Lint DevSite Utils
        run: |
          echo "## Lint Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Run lint and capture output
          set +e
          npm run lint > lint-output.txt 2>&1
          EXIT_CODE=$?
          set -e
          
          # Check if there are warnings or errors in the output
          if grep -q "Files with issues:" lint-output.txt || grep -q "⚠️  WARNING" lint-output.txt || [ $EXIT_CODE -ne 0 ]; then
            echo "⚠️ **Linting issues detected**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extract and display summary
            if grep -q "📊 Linting Summary:" lint-output.txt; then
              echo "### Summary" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              sed -n '/📊 Linting Summary:/,/^$/p' lint-output.txt | grep -E "(Files processed|Files with issues|Total issues|Warnings|fatal)" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
            fi
            
            # Display detailed issues
            echo "### Detailed issues" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            # Extract file paths and their associated warnings/errors
            grep -B 1 -E "⚠️|❌|WARNING|ERROR" lint-output.txt | grep -E "^src/pages/.*:|⚠️|❌|WARNING|ERROR" >> $GITHUB_STEP_SUMMARY || cat lint-output.txt >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            
            # Output to console as well
            cat lint-output.txt
            rm lint-output.txt
            
            echo "::warning::Warnings found but no fatal errors. See job summary for details."
            
            # Save warning status for the comment workflow
            echo "true" > has-warnings.txt
            echo "${{ github.event.pull_request.number }}" > pr-number.txt
          else
            echo "✅ **No issues found!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All files passed linting checks." >> $GITHUB_STEP_SUMMARY
            rm -f lint-output.txt
            
            # Save no-warning status
            echo "false" > has-warnings.txt
            echo "${{ github.event.pull_request.number }}" > pr-number.txt
          fi

      - name: Upload lint results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-results
          path: |
            has-warnings.txt
            pr-number.txt
